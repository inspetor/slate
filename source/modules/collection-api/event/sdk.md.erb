# Note: code snippets are here only temporarily; they should be moved back to the corresponding action page when the SDK properly supports these actions

### CREATE ##
```php
<?php

use Inspetor;

$inspetor = $this->getConfiguredInspetor();

$inspetor->trackEventCreation($event);

?>
```
```python 
import inspetor

inspetor = self.getConfiguredInspetor()

inspetor.track_event_creation(event)

```
### DELETE ###
```php
<?php

use Inspetor;

$inspetor = $this->getConfiguredInspetor();

$inspetor->trackEventDeletion($event);

?>
```
```python 
import inspetor

inspetor = self.getConfiguredInspetor()

inspetor.track_event_deletion(event)

```
### UPDATE ###

```php
<?php

use Inspetor;

$inspetor = $this->getConfiguredInspetor();

$inspetor->trackEventUpdate($event);

?>
```
```python 
import inspetor

inspetor = self.getConfiguredInspetor()

inspetor.track_event_update(event)

```
If you are using the Python or PHP SDKs, the functions for tracking event-related actions require an [InspetorEvent](#inspetorevent) object as argument and return `true` upon successful execution. Otherwise, one of the following exceptions will be thrown:

Exception | Description
--------- | -----------
**[EventException](#inspetoreventexception)**       | The Event object provided is invalid
**[AddressException](#inspetoraddressexception)**   | The Address object provided as a property of the Event object is invalid
**[generalException](#inspetorgeneralexception)** | The timestamps passed as Event object properties are invalid
**[TrackerException](#trackerexception)**   | An internal error occurred (*This should never happen*)

