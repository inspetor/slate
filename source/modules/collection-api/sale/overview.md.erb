## Sale Activity

The following functions provide Inspetor with information on sales that happen within your platform. The main activities that we track are the following:

- <a href="#sale-creation">trackSaleCreation</a>
- <a href="#sale-updates">trackSaleUpdate</a>

Identical functionality is also available via the REST API. The `/sales` endpoint supports POST and UPDATE operations with the following required arguments:


Property | Required For Creation | Required For Update | Type | Description
-------- | --------------------- | ------------------- | ---- | -----------
**id**          | Yes | Yes | String | The unique identifier for the sale within your platform
**timestamp**   | Yes | Yes | Integer | The unix format of the time and date that the action happend
**account_id**  | Yes | No  | String | The id of the user who is making the purchase
**status**      | Yes | Yes | String | The status of the sale. *The allowed values are: `accepted`, `declined`, `pending`, `refunded`, and `manual_analysis`*
**items**       | Yes | No  | Array of [InspetorItem](#inspetoritem) | The items (*e.g. tickets*) that are being bought
**payment**     | Yes | No  | [InspetorPayment](#inspetorpayment) | The payment used in this purchase
**is_fraud**    | No  | Yes | Boolean | Indicates if the sale was fradulent. This should only be `true` when a sale was declined or refunded by antifraud services, or if a chargeback was received for a processed transaction.
**analyzed_by** | No  | Yes | String  | The name of the antifraud system that made the change on the sale. Even if it's us how made the change you should pass "inspetor"

All functions for tracking Sales activity require a [InspetorSale](#inspetorsale) object as an argument and return `true` upon successful execution. Otherwise, one of the following exceptions will be thrown:

Exception | Description
--------- | -----------
**[SaleException](#inspetorsaleexception)**         | The Transfer object provided is not a valid one
**[ItemException](#inspetoritemexception)**         | The Item object provided on the Sale is not a valid one
**[PaymentException](#pinspetoraymentexception)**   | The Payment object provided on the Sale is not a valid one
**[generalException](#inspetorgeneralexception)** | The timestamps that you passed on the objects are not valid ones
**[TrackerException](#trackerexception)**   | An internal error occurred *Hopefully this never happen*

<p><%= partial "modules/collection-api/sale/actions/create.md.erb" %></p>
<p><%= partial "modules/collection-api/sale/actions/update.md.erb" %></p>