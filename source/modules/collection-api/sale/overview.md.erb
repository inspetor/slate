## Sale Activity

You can provide sale-related activity via the REST API. The `/sales` endpoint supports `POST` and `PUT` operations with the following arguments:


Property       | When is it required?   | Type   | Description
--------       | ---------------------  | ----   | -----------
id             | `POST`, `PUT`          | String | The unique identifier for the sale within your platform
account_id     | `POST`                 | String | The id of the user who is making the purchase
status         | `POST`,                | String | The status of the sale. *The allowed values are: `approved`, `declined`, `pending`, `refunded`, and `manual_analysis`*
items          | `POST`                 | Array of [sale items](#sale-items) | The items (*e.g. tickets*) that are being bought
payment        | `POST`                 | [Payment](#sale-payment) | The payment used in this purchase
currency       | `POST`                 | String | The ISO-4217 code for the currency of the `total_value` of the sale
total_value    | `POST`                 | Float  | The total value of the sale

<p><%= partial "modules/collection-api/sale/actions/create.md.erb" %></p>
<p><%= partial "modules/collection-api/sale/actions/update.md.erb" %></p>

<p><%= partial "modules/collection-api/sale/actions/mark_fraudulent.md.erb" %></p>

<p><%= partial "modules/collection-api/sale/sale_items.md.erb" %></p>
<p><%= partial "modules/collection-api/sale/sale_payment.md.erb" %></p>